/* Generated by Frama-C */

#line 216  "/home/debian/klever-inst/klever-addons/CIF/aspectator-bin/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/stddef.h"
typedef unsigned long size_t;

#line 328  "/home/debian/klever-inst/klever-addons/CIF/aspectator-bin/lib/gcc/x86_64-pc-linux-gnu/7.3.0/include/stddef.h"
typedef int wchar_t;

#line 43  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __int64_t;

#line 27  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
typedef __int64_t int64_t;

#line 20  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/types/wint_t.h"
typedef unsigned int wint_t;

#line 442  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/sys/stat.h"
struct _twoIntsStruct {
   int intOne ;
   int intTwo ;
};

#line 100  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_testcase.h"
typedef struct _twoIntsStruct twoIntsStruct;

#line 89  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/pthreadtypes-arch.h"
struct __pthread_internal_list {
   struct __pthread_internal_list *__prev ;
   struct __pthread_internal_list *__next ;
};

#line 86  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
typedef struct __pthread_internal_list __pthread_list_t;

#line 87  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h"
struct __pthread_mutex_s {
   int __lock ;
   unsigned int __count ;
   int __owner ;
   unsigned int __nusers ;
   int __kind ;
   short __spins ;
   short __elision ;
   __pthread_list_t __list ;
};

#line 27  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef unsigned long pthread_t;

#line 36  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
union __anonunion_pthread_mutexattr_t_36 {
   char __size[4U] ;
   int __align ;
};

#line 36  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef union __anonunion_pthread_mutexattr_t_36 pthread_mutexattr_t;

#line 54  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
union pthread_attr_t {
   char __size[56U] ;
   long __align ;
};

#line 62  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef union pthread_attr_t pthread_attr_t;

#line 72  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
union __anonunion_pthread_mutex_t_38 {
   struct __pthread_mutex_s __data ;
   char __size[40U] ;
   long __align ;
};

#line 72  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h"
typedef union __anonunion_pthread_mutex_t_38 pthread_mutex_t;

#line 4  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_thread.h"
struct _stdThread;

#line 4  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_thread.h"
typedef struct _stdThread *stdThread;

#line 5 
struct _stdThreadLock;

#line 5  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_thread.h"
typedef struct _stdThreadLock *stdThreadLock;

#line 22  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_thread.h"
struct _stdThread {
   pthread_t handle ;
   void (*start)(void *) ;
   void *args ;
};

#line 116  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_thread.c"
struct _stdThreadLock {
   pthread_mutex_t mutex ;
};

#line 158  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/types.h"
typedef long __time_t;

#line 7  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/types/time_t.h"
typedef __time_t time_t;

#line 332  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/stdio.h"
int printf(char const * , ...);


#line 399 
int sscanf(char const *, char const * , ...);


#line 638 
int puts(char const *);


#line 453  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/stdlib.h"
int rand(void);


#line 140  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/x86_64-linux-gnu/bits/wctype-wchar.h"
int iswxdigit(wint_t);


#line 79  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/ctype.h"
unsigned short const **__ctype_b_loc(void);


#line 109  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_testcase.h"
int const GLOBAL_CONST_TRUE;


#line 110 
int const GLOBAL_CONST_FALSE;


#line 111 
int const GLOBAL_CONST_FIVE;


#line 116 
int globalTrue;


#line 117 
int globalFalse;


#line 118 
int globalFive;


#line 14  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_testcase_io.h"
void printLine(char const *line);


#line 16 
void printWLine(wchar_t const *line);


#line 18 
void printIntLine(int intNumber);


#line 20 
void printShortLine(short shortNumber);


#line 22 
void printFloatLine(float floatNumber);


#line 24 
void printLongLine(long longNumber);


#line 26 
void printLongLongLine(int64_t longLongIntNumber);


#line 28 
void printSizeTLine(size_t sizeTNumber);


#line 30 
void printHexCharLine(char charHex);


#line 32 
void printWcharLine(wchar_t wideChar);


#line 34 
void printUnsignedLine(unsigned int unsignedNumber);


#line 36 
void printHexUnsignedCharLine(unsigned char unsignedCharacter);


#line 38 
void printDoubleLine(double doubleNumber);


#line 40 
void printStructLine(twoIntsStruct const *structTwoIntsStruct);


#line 42 
void printBytesLine(unsigned char const *bytes, size_t numBytes);


#line 44 
size_t decodeHexChars(unsigned char *bytes, size_t numBytes, char const *hex);


#line 46 
size_t decodeHexWChars(unsigned char *bytes, size_t numBytes, wchar_t const *hex);


#line 48 
int globalReturnsTrue(void);


#line 50 
int globalReturnsFalse(void);


#line 52 
int globalReturnsTrueOrFalse(void);


#line 55 
int globalArgc;


#line 56 
char **globalArgv;


#line 587  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/wchar.h"
int wprintf(wchar_t const * , ...);


#line 631 
int swscanf(wchar_t const *, wchar_t const * , ...);


#line 11  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printLine(char const *line)
{
  
#line 13 
  if (line != (char const *)0) 
#line 15 
                               printf("%s\n",line); else ;
  
#line 16 
  return;
}


#line 19  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printWLine(wchar_t const *line)
{
  
#line 21 
  if (line != (wchar_t const *)0) 
#line 23 
                                  wprintf((wchar_t const *)L"%" "l" "s" "\\n" ,line); else ;
  
#line 24 
  return;
}


#line 27  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printIntLine(int intNumber)
{
  
#line 29 
  printf("%d\n",intNumber);
  
#line 30 
  return;
}


#line 32  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printShortLine(short shortNumber)
{
  
#line 34 
  printf("%hd\n",(int)shortNumber);
  
#line 35 
  return;
}


#line 37  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printFloatLine(float floatNumber)
{
  
#line 39 
  printf("%f\n",(double)floatNumber);
  
#line 40 
  return;
}


#line 42  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printLongLine(long longNumber)
{
  
#line 44 
  printf("%ld\n",longNumber);
  
#line 45 
  return;
}


#line 47  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printLongLongLine(int64_t longLongIntNumber)
{
  
#line 49 
  printf("%",longLongIntNumber);
  
#line 50 
  return;
}


#line 52  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printSizeTLine(size_t sizeTNumber)
{
  
#line 54 
  printf("%zu\n",sizeTNumber);
  
#line 55 
  return;
}


#line 57  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printHexCharLine(char charHex)
{
  
#line 59 
  printf("%02x\n",(int)charHex);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printWcharLine(wchar_t wideChar)
{
  wchar_t s[2U];
  
#line 67 
  s[0] = wideChar;
  
#line 68 
  s[1] = 0;
  
#line 69 
  printf("%ls\n",(wchar_t *)(& s));
  
#line 70 
  return;
}


#line 72  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printUnsignedLine(unsigned int unsignedNumber)
{
  
#line 74 
  printf("%u\n",unsignedNumber);
  
#line 75 
  return;
}


#line 77  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printHexUnsignedCharLine(unsigned char unsignedCharacter)
{
  
#line 79 
  printf("%02x\n",(int)unsignedCharacter);
  
#line 80 
  return;
}


#line 82  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printDoubleLine(double doubleNumber)
{
  
#line 84 
  printf("%g\n",doubleNumber);
  
#line 85 
  return;
}


#line 87  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printStructLine(twoIntsStruct const *structTwoIntsStruct)
{
  
#line 89 
  printf("%d -- %d\n",structTwoIntsStruct->intOne,structTwoIntsStruct->intTwo);
  
#line 90 
  return;
}


#line 92  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void printBytesLine(unsigned char const *bytes, size_t numBytes)
{
  size_t i;
  
#line 95 
  i = 0UL;
  
#line 95 
  goto ldv_3392;
  ldv_3391: 
#line 96 
  ;
  
#line 97 
  printf("%02x",(int)*(bytes + i));
  
#line 95 
  i += 1UL;
  ldv_3392: 
#line 96 
  ;
  
#line 95 
  if (i < numBytes) 
#line 97 
                    goto ldv_3391; else 
#line 100 
                                        goto ldv_3393;
  ldv_3393: 
#line 101 
  ;
  
#line 99 
  puts("");
  
#line 100 
  return;
}


#line 105  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
size_t decodeHexChars(unsigned char *bytes, size_t numBytes, char const *hex)
{
  
#line 107 
  size_t numWritten = 0UL;
  
#line 113 
  goto ldv_3402;
  ldv_3401: 
#line 114 
  ;
  {
    int byte;
    
#line 116 
    sscanf(hex + numWritten * 2UL,"%02x",& byte);
    
#line 117 
    *(bytes + numWritten) = (unsigned char)byte;
    
#line 118 
    numWritten += 1UL;
  }
  ldv_3402: 
#line 120 
  ;
  
#line 113 
  if (numWritten < numBytes) {
    unsigned short const **tmp;
    
#line 113 
    tmp = __ctype_b_loc();
    
#line 113 
    ;
    
#line 113 
    if (((int)*(*tmp + (int)*(hex + numWritten * 2UL)) & 4096) != 0) {
      unsigned short const **tmp_0;
      
#line 113 
      tmp_0 = __ctype_b_loc();
      
#line 113 
      ;
      
#line 113 
      if (((int)*(*tmp_0 + (int)*(hex + (numWritten * 2UL + (size_t)1U))) & 4096) != 0) 
        
#line 115 
        goto ldv_3401; else 
#line 118 
                            goto ldv_3403;
    }
    else 
#line 118 
         goto ldv_3403;
  }
  else 
#line 118 
       goto ldv_3403;
  ldv_3403: 
#line 119 
  ;
  
#line 121 
  return numWritten;
}


#line 127  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
size_t decodeHexWChars(unsigned char *bytes, size_t numBytes, wchar_t const *hex)
{
  
#line 129 
  size_t numWritten = 0UL;
  
#line 135 
  goto ldv_3412;
  ldv_3411: 
#line 136 
  ;
  {
    int byte;
    
#line 138 
    swscanf(hex + numWritten * 2UL,(wchar_t const *)L"%" "0" "2" "x" ,& byte);
    
#line 139 
    *(bytes + numWritten) = (unsigned char)byte;
    
#line 140 
    numWritten += 1UL;
  }
  ldv_3412: 
#line 142 
  ;
  
#line 135 
  if (numWritten < numBytes) {
    int tmp;
    
#line 135 
    tmp = iswxdigit((unsigned int)*(hex + numWritten * 2UL));
    
#line 135 
    if (tmp != 0) {
      int tmp_0;
      
#line 135 
      tmp_0 = iswxdigit((unsigned int)*(hex + (numWritten * 2UL + (size_t)1U)));
      
#line 135 
      if (tmp_0 != 0) 
#line 137 
                      goto ldv_3411; else 
#line 140 
                                          goto ldv_3413;
    }
    else 
#line 140 
         goto ldv_3413;
  }
  else 
#line 140 
       goto ldv_3413;
  ldv_3413: 
#line 141 
  ;
  
#line 143 
  return numWritten;
}


#line 148  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
int globalReturnsTrue(void)
{
  int __retres;
  
#line 150 
  __retres = 1;
  
#line 150 
  return __retres;
}


#line 153  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
int globalReturnsFalse(void)
{
  int __retres;
  
#line 155 
  __retres = 0;
  
#line 155 
  return __retres;
}


#line 158  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
int globalReturnsTrueOrFalse(void)
{
  int __retres;
  int tmp;
  
#line 160 
  tmp = rand();
  
#line 160 
  __retres = tmp % 2;
  
#line 160 
  return __retres;
}


#line 166  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
int const GLOBAL_CONST_TRUE = 1;

#line 167  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
int const GLOBAL_CONST_FALSE = 0;

#line 168  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
int const GLOBAL_CONST_FIVE = 5;

#line 173  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
int globalTrue = 1;

#line 174  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
int globalFalse = 0;

#line 175  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
int globalFive = 5;

#line 179  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void good1(void)
{
  
#line 181 
  return;
}


#line 180  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void good2(void)
{
  
#line 182 
  return;
}


#line 181  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void good3(void)
{
  
#line 183 
  return;
}


#line 182  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void good4(void)
{
  
#line 184 
  return;
}


#line 183  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void good5(void)
{
  
#line 185 
  return;
}


#line 184  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void good6(void)
{
  
#line 186 
  return;
}


#line 185  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void good7(void)
{
  
#line 187 
  return;
}


#line 186  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void good8(void)
{
  
#line 188 
  return;
}


#line 187  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void good9(void)
{
  
#line 189 
  return;
}


#line 190  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void bad1(void)
{
  
#line 192 
  return;
}


#line 191  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void bad2(void)
{
  
#line 193 
  return;
}


#line 192  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void bad3(void)
{
  
#line 194 
  return;
}


#line 193  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void bad4(void)
{
  
#line 195 
  return;
}


#line 194  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void bad5(void)
{
  
#line 196 
  return;
}


#line 195  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void bad6(void)
{
  
#line 197 
  return;
}


#line 196  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void bad7(void)
{
  
#line 198 
  return;
}


#line 197  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void bad8(void)
{
  
#line 199 
  return;
}


#line 198  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
void bad9(void)
{
  
#line 200 
  return;
}


#line 206  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
int globalArgc = 0;

#line 207  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/io.c"
char **globalArgv = (char **)0;

#line 539  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/stdlib.h"
void *malloc(size_t);


#line 563 
void free(void *);


#line 234  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/pthread.h"
int pthread_create(pthread_t *, pthread_attr_t const *, void *(*)(void *), void *);


#line 243 
void pthread_exit(void *);


#line 251 
int pthread_join(pthread_t, void **);


#line 750 
int pthread_mutex_init(pthread_mutex_t *, pthread_mutexattr_t const *);


#line 755 
int pthread_mutex_destroy(pthread_mutex_t *);


#line 763 
int pthread_mutex_lock(pthread_mutex_t *);


#line 774 
int pthread_mutex_unlock(pthread_mutex_t *);


#line 14  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_thread.h"
int stdThreadCreate(void (*start)(void *), void *args, stdThread *thread);


#line 15 
int stdThreadJoin(stdThread thread);


#line 16 
int stdThreadDestroy(stdThread thread);


#line 18 
int stdThreadLockCreate(stdThreadLock *lock);


#line 19 
void stdThreadLockAcquire(stdThreadLock lock);


#line 20 
void stdThreadLockRelease(stdThreadLock lock);


#line 21 
void stdThreadLockDestroy(stdThreadLock lock);


#line 30  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_thread.c"
static void *internal_start(void *args)
{
  void *__retres;
  
#line 33 
  stdThread thread = (struct _stdThread *)args;
  
#line 35 
  (*(thread->start))(thread->args);
  
#line 42 
  pthread_exit((void *)0);
  
#line 44 
  __retres = (void *)0;
  
#line 44 
  return __retres;
}


#line 48  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_thread.c"
int stdThreadCreate(void (*start)(void *), void *args, stdThread *thread)
{
  int __retres;
  pthread_t handle;
  stdThread my_thread;
  int tmp_0;
  
#line 57 
  *thread = (struct _stdThread *)0;
  
#line 59 
  my_thread = (stdThread)malloc(24UL);
  
#line 60 
  if (my_thread == (struct _stdThread *)0) {
    
#line 61 
    __retres = 0;
    
#line 61 
    goto return_label;
  }
  else ;
  
#line 64 
  my_thread->start = start;
  
#line 65 
  my_thread->args = args;
  
#line 74 
  tmp_0 = pthread_create(& handle,(pthread_attr_t const *)0,& internal_start,(void *)my_thread);
  
#line 74 
  if (tmp_0 != 0) {
    
#line 75 
    free((void *)my_thread);
    
#line 76 
    __retres = 0;
    
#line 76 
    goto return_label;
  }
  else ;
  
#line 84 
  my_thread->handle = handle;
  
#line 86 
  *thread = my_thread;
  
#line 88 
  __retres = 1;
  return_label: 
#line 88 
                return __retres;
}


#line 91  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_thread.c"
int stdThreadJoin(stdThread thread)
{
  int __retres;
  void *dummy;
  int tmp;
  
#line 100 
  tmp = pthread_join(thread->handle,& dummy);
  
#line 100 
  if (tmp != 0) {
    
#line 100 
    __retres = 0;
    
#line 100 
    goto return_label;
  }
  else ;
  
#line 103 
  __retres = 1;
  return_label: 
#line 103 
                return __retres;
}


#line 106  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_thread.c"
int stdThreadDestroy(stdThread thread)
{
  int __retres;
  
#line 112 
  free((void *)thread);
  
#line 114 
  __retres = 1;
  
#line 114 
  return __retres;
}


#line 133  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_thread.c"
int stdThreadLockCreate(stdThreadLock *lock)
{
  int __retres;
  int tmp_0;
  
#line 135 
  stdThreadLock my_lock = (struct _stdThreadLock *)0;
  
#line 137 
  *lock = (struct _stdThreadLock *)0;
  
#line 139 
  my_lock = (stdThreadLock)malloc(40UL);
  
#line 140 
  if (my_lock == (struct _stdThreadLock *)0) {
    
#line 140 
    __retres = 0;
    
#line 140 
    goto return_label;
  }
  else ;
  
#line 150 
  tmp_0 = pthread_mutex_init(& my_lock->mutex,(pthread_mutexattr_t const *)0);
  
#line 150 
  if (tmp_0 != 0) {
    
#line 151 
    free((void *)lock);
    
#line 152 
    __retres = 0;
    
#line 152 
    goto return_label;
  }
  else ;
  
#line 156 
  *lock = my_lock;
  
#line 158 
  __retres = 1;
  return_label: 
#line 158 
                return __retres;
}


#line 161  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_thread.c"
void stdThreadLockAcquire(stdThreadLock lock)
{
  
#line 184 
  pthread_mutex_lock(& lock->mutex);
  
#line 185 
  return;
}


#line 188  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_thread.c"
void stdThreadLockRelease(stdThreadLock lock)
{
  
#line 196 
  pthread_mutex_unlock(& lock->mutex);
  
#line 197 
  return;
}


#line 200  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcasesupport/std_thread.c"
void stdThreadLockDestroy(stdThreadLock lock)
{
  
#line 205 
  pthread_mutex_destroy(& lock->mutex);
  
#line 207 
  free((void *)lock);
  
#line 208 
  return;
}


#line 10  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/0/vtg/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_04.out/juliet:memory safety/weaver/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_04.c.aux"
char *ldv_strcpy(char *dest, char const *src);


#line 455  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/stdlib.h"
void srand(unsigned int);


#line 75  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/time.h"
time_t time(time_t *);


#line 125  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/string.h"
static char *ldv_strcpy_1(char * __restrict ldv_func_arg1, char const * __restrict ldv_func_arg2);


#line 129 
static char *ldv_strcpy_2(char * __restrict ldv_func_arg1, char const * __restrict ldv_func_arg2);


#line 30  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_04.c"
static int const STATIC_CONST_TRUE = 1;

#line 31  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_04.c"
static int const STATIC_CONST_FALSE = 0;

#line 60  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_04.c"
static void goodG2B1(void)
{
  char *data;
  char dataBadBuffer[10U];
  char dataGoodBuffer[11U];
  
#line 65 
  if (STATIC_CONST_FALSE != 0) 
#line 68 
                               printLine("Benign, fixed string");
  else {
    
#line 74 
    data = (char *)(& dataGoodBuffer);
    
#line 75 
    *data = (char)0;
  }
  {
    
#line 78 
    char source[11U] = {(char)'A', (char)'A', (char)'A', (char)'A', (char)'A', (char)'A', (char)'A', (char)'A', (char)'A', (char)'A', (char)'\000'};
    
#line 80 
    ldv_strcpy_1(data,(char const *)(& source));
    
#line 81 
    printLine((char const *)data);
  }
  
#line 83 
  return;
}


#line 86  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_04.c"
static void goodG2B2(void)
{
  char *data;
  char dataBadBuffer[10U];
  char dataGoodBuffer[11U];
  
#line 91 
  if (STATIC_CONST_TRUE != 0) {
    
#line 95 
    data = (char *)(& dataGoodBuffer);
    
#line 96 
    *data = (char)0;
  }
  else ;
  {
    
#line 99 
    char source[11U] = {(char)'A', (char)'A', (char)'A', (char)'A', (char)'A', (char)'A', (char)'A', (char)'A', (char)'A', (char)'A', (char)'\000'};
    
#line 101 
    ldv_strcpy_2(data,(char const *)(& source));
    
#line 102 
    printLine((char const *)data);
  }
  
#line 104 
  return;
}


#line 106  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_04.c"
void CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_04_good(void)
{
  
#line 108 
  goodG2B1();
  
#line 109 
  goodG2B2();
  
#line 110 
  return;
}


#line 122  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_04.c"
int main(int argc, char **argv)
{
  int __retres;
  {
    time_t tmp;
    
#line 125 
    tmp = time((time_t *)0L);
    
#line 125 
    srand((unsigned int)tmp);
    
#line 127 
    printLine("Calling good()...");
    
#line 128 
    CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_04_good();
    
#line 129 
    printLine("Finished good()");
    
#line 136 
    __retres = 0;
    
#line 136 
    goto return_label;
  }
  
#line 1  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/fast/programs/juliet/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/<built-in>"
  __retres = 0;
  return_label: 
#line 1 
                return __retres;
}


#line 125  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/string.h"
static char *ldv_strcpy_1(char * __restrict ldv_func_arg1, char const * __restrict ldv_func_arg2)
{
  char *tmp;
  
#line 18  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/0/vtg/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_04.out/juliet:memory safety/weaver/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_04.c.aux"
  tmp = ldv_strcpy(ldv_func_arg1,ldv_func_arg2);
  
#line 18 
  return tmp;
}


#line 129  "/home/debian/klever-inst/klever/build bases/juliet-omitbad/Storage/usr/include/string.h"
static char *ldv_strcpy_2(char * __restrict ldv_func_arg1, char const * __restrict ldv_func_arg2)
{
  char *tmp;
  
#line 25  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/0/vtg/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_04.out/juliet:memory safety/weaver/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_cpy_04.c.aux"
  tmp = ldv_strcpy(ldv_func_arg1,ldv_func_arg2);
  
#line 25 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc_unknown_size(size_t size);


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_int(void);


#line 31 
int ldv_undef_int_positive(void);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/stdio.c"
int ldv_asprintf(char **ptr);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/stdio.c"
int ldv_asprintf(char **ptr)
{
  int __retres;
  char *new;
  int tmp_1;
  
#line 27 
  tmp_1 = ldv_undef_int();
  
#line 27 
  if (tmp_1 != 0) {
    int tmp_0;
    
#line 28 
    new = (char *)ldv_xmalloc_unknown_size(1UL);
    
#line 29 
    *ptr = new;
    
#line 30 
    tmp_0 = ldv_undef_int_positive();
    
#line 30 
    __retres = tmp_0;
    
#line 30 
    goto return_label;
  }
  else {
    
#line 32 
    __retres = -1;
    
#line 32 
    goto return_label;
  }
  return_label: 
#line 27 
                return __retres;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_assume(int);


#line 20  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/stdlib.c"
void ldv_exit(void);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/stdlib.c"
void ldv_exit(void)
{
  
#line 24 
  __VERIFIER_assume(0);
  
#line 25 
  return;
}


#line 30  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_xmalloc(size_t size);


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/string.c"
void *memcpy(void *, void const *, size_t);


#line 24 
char *ldv_strdup(char const *s);


#line 26 
char *ldv_strncpy(char *dest, char const *src, size_t n);


#line 27 
size_t ldv_strlen(char const *str);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/string.c"
char *ldv_strdup(char const *s)
{
  char *__retres;
  char *new;
  int tmp_2;
  
#line 32 
  tmp_2 = ldv_undef_int();
  
#line 32 
  if (tmp_2 != 0) {
    void *tmp_0;
    size_t tmp;
    size_t tmp_1;
    
#line 33 
    tmp = ldv_strlen(s);
    
#line 33 
    tmp_0 = ldv_xmalloc(tmp);
    
#line 33 
    new = (char *)tmp_0;
    
#line 34 
    tmp_1 = ldv_strlen(s);
    
#line 34 
    ;
    
#line 34 
    ;
    
#line 34 
    memcpy((void *)new,(void const *)s,tmp_1);
    
#line 35 
    __retres = new;
    
#line 35 
    goto return_label;
  }
  else {
    
#line 37 
    __retres = (char *)0;
    
#line 37 
    goto return_label;
  }
  return_label: 
#line 32 
                return __retres;
}


#line 41  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/string.c"
size_t ldv_strlen(char const *str)
{
  size_t __retres;
  char const *s;
  
#line 43 
  s = str;
  
#line 43 
  goto ldv_1424;
  ldv_1423: 
#line 44 
  ;
  
#line 43 
  s += 1;
  ldv_1424: 
#line 44 
  ;
  
#line 43 
  if ((int)*s != 0) 
#line 45 
                    goto ldv_1423; else 
#line 48 
                                        goto ldv_1425;
  ldv_1425: 
#line 49 
  ;
  
#line 44 
  __retres = (unsigned long)((long)s - (long)str);
  
#line 44 
  return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/string.c"
char *ldv_strncpy(char *dest, char const *src, size_t n)
{
  size_t i;
  
#line 51 
  i = 0UL;
  
#line 51 
  goto ldv_1433;
  ldv_1432: 
#line 52 
  ;
  
#line 52 
  *(dest + i) = *(src + i);
  
#line 51 
  i += 1UL;
  ldv_1433: 
#line 52 
  ;
  
#line 51 
  if (i < n && (int)*(src + i) != 0) 
#line 53 
                                     goto ldv_1432; else 
#line 56 
                                                         goto ldv_1434;
  ldv_1434: 
#line 57 
  ;
  
#line 53 
  goto ldv_1436;
  ldv_1435: 
#line 54 
  ;
  
#line 54 
  *(dest + i) = (char)0;
  
#line 53 
  i += 1UL;
  ldv_1436: 
#line 54 
  ;
  
#line 53 
  if (i < n) 
#line 55 
             goto ldv_1435; else 
#line 58 
                                 goto ldv_1437;
  ldv_1437: 
#line 59 
  ;
  
#line 56 
  return dest;
}


#line 60  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/string.c"
char *ldv_strcpy(char *dest, char const *src)
{
  size_t tmp;
  
#line 62 
  tmp = ldv_strlen(src);
  
#line 62 
  ;
  
#line 62 
  ;
  
#line 62 
  memcpy((void *)dest,(void const *)src,tmp);
  
#line 63 
  return dest;
}


#line 23  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *ldv_malloc(size_t size);


#line 24 
void *ldv_calloc(size_t nmemb, size_t size);


#line 25 
void *ldv_zalloc(size_t size);


#line 26 
void ldv_free(void *s);


#line 28 
void *ldv_realloc(void *ptr, size_t size);


#line 31 
void *ldv_xzalloc(size_t size);


#line 35 
void *ldv_malloc_unknown_size(void);


#line 36 
void *ldv_calloc_unknown_size(void);


#line 37 
void *ldv_zalloc_unknown_size(void);


#line 40 
void *ldv_reference_malloc(size_t size);


#line 41 
void *ldv_reference_calloc(size_t nmemb, size_t size);


#line 42 
void *ldv_reference_zalloc(size_t size);


#line 43 
void ldv_reference_free(void *s);


#line 45 
void *ldv_reference_realloc(void *ptr, size_t size);


#line 47 
void *ldv_reference_xmalloc(size_t size);


#line 48 
void *ldv_reference_xzalloc(size_t size);


#line 52 
void *ldv_reference_malloc_unknown_size(void);


#line 53 
void *ldv_reference_calloc_unknown_size(void);


#line 54 
void *ldv_reference_zalloc_unknown_size(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/verifier/memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size);


#line 32  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/verifier/memory.c"
void *ldv_malloc(size_t size)
{
  void *tmp;
  
#line 34 
  tmp = ldv_reference_malloc(size);
  
#line 34 
  return tmp;
}


#line 37  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/verifier/memory.c"
void *ldv_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 39 
  tmp = ldv_reference_calloc(nmemb,size);
  
#line 39 
  return tmp;
}


#line 42  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/verifier/memory.c"
void *ldv_zalloc(size_t size)
{
  void *tmp;
  
#line 44 
  tmp = ldv_reference_zalloc(size);
  
#line 44 
  return tmp;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/verifier/memory.c"
void ldv_free(void *s)
{
  
#line 49 
  ldv_reference_free(s);
  
#line 50 
  return;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/verifier/memory.c"
void *ldv_xmalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = ldv_reference_xmalloc(size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/verifier/memory.c"
void *ldv_xzalloc(size_t size)
{
  void *tmp;
  
#line 59 
  tmp = ldv_reference_xzalloc(size);
  
#line 59 
  return tmp;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/verifier/memory.c"
void *ldv_malloc_unknown_size(void)
{
  void *tmp;
  
#line 64 
  tmp = ldv_reference_malloc_unknown_size();
  
#line 64 
  return tmp;
}


#line 67  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/verifier/memory.c"
void *ldv_calloc_unknown_size(void)
{
  void *tmp;
  
#line 69 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 69 
  return tmp;
}


#line 72  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/verifier/memory.c"
void *ldv_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 74 
  tmp = ldv_reference_zalloc_unknown_size();
  
#line 74 
  return tmp;
}


#line 77  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/verifier/memory.c"
void *ldv_xmalloc_unknown_size(size_t size)
{
  void *tmp;
  
#line 79 
  tmp = ldv_reference_xmalloc_unknown_size(size);
  
#line 79 
  return tmp;
}


#line 82  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/userspace/verifier/memory.c"
void *ldv_realloc(void *ptr, size_t size)
{
  void *tmp;
  
#line 84 
  tmp = ldv_reference_realloc(ptr,size);
  
#line 84 
  return tmp;
}


#line 22  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/common.h"
void __VERIFIER_error(void);


#line 32 
void ldv_error(void);


#line 20  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/common.c"
void ldv_error(void)
{
  
#line 23 
  __VERIFIER_error();
  
#line 24 
  return;
}

long __builtin_expect(long exp, long c);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
long __builtin_expect(long exp, long c)
{
  
#line 26 
  return exp;
}


#line 35  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/gcc.c"
void __builtin_trap(void)
{
  
#line 37 
  __VERIFIER_error();
  
#line 38 
  return;
}


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/nondet.h"
int ldv_undef_long(void);


#line 25 
unsigned int ldv_undef_uint(void);


#line 26 
unsigned long ldv_undef_ulong(void);


#line 27 
unsigned long long ldv_undef_ulonglong(void);


#line 28 
void *ldv_undef_ptr(void);


#line 34 
int ldv_undef_int_negative(void);


#line 37 
int ldv_undef_int_nonpositive(void);


#line 40 
void *ldv_undef_ptr_non_null(void);


#line 29  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int __VERIFIER_nondet_int(void);


#line 31 
long __VERIFIER_nondet_long(void);


#line 38 
unsigned int __VERIFIER_nondet_uint(void);


#line 41 
unsigned long __VERIFIER_nondet_ulong(void);


#line 42 
unsigned long long __VERIFIER_nondet_ulonglong(void);


#line 43 
void *__VERIFIER_nondet_pointer(void);


#line 46  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int(void)
{
  int tmp;
  
#line 48 
  tmp = __VERIFIER_nondet_int();
  
#line 48 
  return tmp;
}


#line 51  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_long(void)
{
  int __retres;
  long tmp;
  
#line 53 
  tmp = __VERIFIER_nondet_long();
  
#line 53 
  __retres = (int)tmp;
  
#line 53 
  return __retres;
}


#line 56  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned int ldv_undef_uint(void)
{
  unsigned int tmp;
  
#line 58 
  tmp = __VERIFIER_nondet_uint();
  
#line 58 
  return tmp;
}


#line 61  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr(void)
{
  void *tmp;
  
#line 63 
  tmp = __VERIFIER_nondet_pointer();
  
#line 63 
  return tmp;
}


#line 66  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long ldv_undef_ulong(void)
{
  unsigned long tmp;
  
#line 68 
  tmp = __VERIFIER_nondet_ulong();
  
#line 68 
  return tmp;
}


#line 71  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
unsigned long long ldv_undef_ulonglong(void)
{
  unsigned long long tmp;
  
#line 73 
  tmp = __VERIFIER_nondet_ulonglong();
  
#line 73 
  return tmp;
}


#line 76  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_positive(void)
{
  
#line 78 
  int ret = ldv_undef_int();
  
#line 80 
  __VERIFIER_assume(ret > 0);
  
#line 82 
  return ret;
}


#line 85  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_negative(void)
{
  
#line 87 
  int ret = ldv_undef_int();
  
#line 89 
  __VERIFIER_assume(ret < 0);
  
#line 91 
  return ret;
}


#line 94  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
int ldv_undef_int_nonpositive(void)
{
  
#line 96 
  int ret = ldv_undef_int();
  
#line 98 
  __VERIFIER_assume(ret <= 0);
  
#line 100 
  return ret;
}


#line 103  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/nondet.c"
void *ldv_undef_ptr_non_null(void)
{
  
#line 105 
  void *ret = ldv_undef_ptr();
  
#line 107 
  __VERIFIER_assume(ret != (void *)0);
  
#line 109 
  return ret;
}


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/memory.h"
void *external_allocated_data(void);


#line 24  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *calloc(size_t, size_t);


#line 31 
void *memset(void *, int, size_t);


#line 33  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc(size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 37 
  tmp = ldv_undef_int();
  
#line 37 
  if (tmp != 0) {
    
#line 39 
    res = malloc(size);
    
#line 40 
    __VERIFIER_assume(res != (void *)0);
    
#line 41 
    __retres = res;
    
#line 41 
    goto return_label;
  }
  else {
    
#line 44 
    __retres = (void *)0;
    
#line 44 
    goto return_label;
  }
  return_label: 
#line 37 
                return __retres;
}


#line 47  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc(size_t nmemb, size_t size)
{
  void *tmp;
  
#line 49 
  tmp = calloc(nmemb,size);
  
#line 49 
  return tmp;
}


#line 52  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc(size_t size)
{
  void *tmp;
  
#line 54 
  tmp = calloc(1UL,size);
  
#line 54 
  return tmp;
}


#line 57  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void ldv_reference_free(void *s)
{
  
#line 59 
  free(s);
  
#line 60 
  return;
}


#line 62  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_realloc(void *ptr, size_t size)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 66 
  if (ptr != (void *)0 && size == 0UL) {
    
#line 67 
    free(ptr);
    
#line 68 
    __retres = (void *)0;
    
#line 68 
    goto return_label;
  }
  else ;
  
#line 71 
  if (ptr == (void *)0) {
    
#line 72 
    res = malloc(size);
    
#line 73 
    __retres = res;
    
#line 73 
    goto return_label;
  }
  else ;
  
#line 76 
  tmp = ldv_undef_int();
  
#line 76 
  if (tmp != 0) {
    
#line 78 
    res = malloc(size);
    
#line 79 
    __VERIFIER_assume(res != (void *)0);
    
#line 81 
    memcpy(res,(void const *)ptr,size);
    
#line 82 
    free(ptr);
    
#line 84 
    __retres = res;
    
#line 84 
    goto return_label;
  }
  else {
    
#line 87 
    __retres = (void *)0;
    
#line 87 
    goto return_label;
  }
  return_label: 
#line 76 
                return __retres;
}


#line 90  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc(size_t size)
{
  void *res;
  
#line 94 
  res = malloc(size);
  
#line 95 
  __VERIFIER_assume(res != (void *)0);
  
#line 97 
  return res;
}


#line 100  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xzalloc(size_t size)
{
  void *res;
  
#line 104 
  res = calloc(1UL,size);
  
#line 105 
  __VERIFIER_assume(res != (void *)0);
  
#line 107 
  return res;
}


#line 110  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_malloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 114 
  tmp = ldv_undef_int();
  
#line 114 
  if (tmp != 0) {
    
#line 115 
    res = external_allocated_data();
    
#line 116 
    __VERIFIER_assume(res != (void *)0);
    
#line 117 
    __retres = res;
    
#line 117 
    goto return_label;
  }
  else {
    
#line 120 
    __retres = (void *)0;
    
#line 120 
    goto return_label;
  }
  return_label: 
#line 114 
                return __retres;
}


#line 123  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_calloc_unknown_size(void)
{
  void *__retres;
  void *res;
  int tmp;
  
#line 127 
  tmp = ldv_undef_int();
  
#line 127 
  if (tmp != 0) {
    
#line 128 
    res = external_allocated_data();
    
#line 129 
    memset(res,0,8UL);
    
#line 130 
    __VERIFIER_assume(res != (void *)0);
    
#line 131 
    __retres = res;
    
#line 131 
    goto return_label;
  }
  else {
    
#line 134 
    __retres = (void *)0;
    
#line 134 
    goto return_label;
  }
  return_label: 
#line 127 
                return __retres;
}


#line 137  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_zalloc_unknown_size(void)
{
  void *tmp;
  
#line 139 
  tmp = ldv_reference_calloc_unknown_size();
  
#line 139 
  return tmp;
}


#line 142  "/home/debian/klever-inst/klever-work/native-scheduler/scheduler/jobs/f37bddfe611e85b7b649f04bca1dc6dd/klever-core-work-dir/job/root/specifications/verifier/reference memory.c"
void *ldv_reference_xmalloc_unknown_size(size_t size)
{
  void *res;
  
#line 146 
  res = external_allocated_data();
  
#line 147 
  __VERIFIER_assume(res != (void *)0);
  
#line 149 
  return res;
}


